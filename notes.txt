AHB seems to be largely overkill, most features not required.
No pipelining, protection, split/retry, arbitration etc...

APB seems closer to what we need. No consumption when no transfer.
Maybe wait states required probably no slverr needed

Bus decoder + arbiter ?
One APB master slave per TDM.

Alternatively 
  - 1 single APB master and slave per Sinks
  - 1 single APB master and slave per Sources

Add a counter block which counts a programmable window using pclk.
How many cycles were there no psels active during the window.
Status congestion register. Makes it easy to use minimum bus clock frequency.

Registers should be part of this block add apb master to i2c block.

    sink0.dest_addr          source0.source_addr
    sink1.dest_addr          source0.source_addr
    sink2.dest_addr          source0.source_addr
      :   :   :                :   :   :
    sinkn.dest_addr          source0.source_addr

    congestion monitor enable
    congestion status ( active cycles / window size )

Gray encoding or similar to reduce bus toggling??

=======================
Issues:
------
 - Seems to be sending the last data twice!
   due to current idx changing at same time as ACCESS to SETUP transition
 - You need to try a synthesis of the end product
   => expect 1 master state machine (2regs) rest is combinational
 - source valids out not correct

=======================

Cost of APB state machine:
-------------------------
APB master 2 registers plus state machine logic
APB slave 4 and gates
Rising edge detect for each sink valid (49)

6bit destination address for each sink (25x16 bit registers)
broadcast bit per source (59bits => 4x16bit register)

We would need an arbiter in the case of multi master.

Logic to select current master valid/data from master data/valids array 
Logic to generate current slave valid array from paddr

2 clock cycles per transfer. 
Clock is gated when no transfers.
clock frequency should be reduced according to scenario.

Optional congestion counter (need to count to 12500 : 8khz with 100MHz clock worst case)
14 bit window counter, 1 enable bit (1 16bit register)
14 bit status register (1 16bit register)


========================
Synthesis
---------

use cadence RC
> rc -gui

.tcl - tcl constraints file?
.tcf - transition change format similar to saif for power estimation
